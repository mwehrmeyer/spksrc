diff --color -Naur a/src/java.base/share/classes/java/util/Properties.java b/src/java.base/share/classes/java/util/Properties.java
--- a/src/java.base/share/classes/java/util/Properties.java	2024-12-04 02:02:53.000000000 +0100
+++ b/src/java.base/share/classes/java/util/Properties.java	2024-12-05 21:18:53.355478067 +0100
@@ -955,7 +955,7 @@
         if (sysPropVal != null && !sysPropVal.isEmpty()) {
             writeComments(bw, sysPropVal);
         } else {
-            bw.write("#" + new Date());
+            bw.write("#" + getFormattedTimestamp());
             bw.newLine();
         }
     }
@@ -1600,4 +1600,22 @@
         }
         this.map = map;
     }
+
+    /**
+     * Returns a formatted timestamp to be used in the properties file header.
+     * The date used is the current date, unless the SOURCE_DATE_EPOCH
+     * environment variable is specified. In this case the format used is
+     * locale and timezone insensitive to ensure the output is reproducible.
+     */
+    private static String getFormattedTimestamp() {
+        if (System.getenv("SOURCE_DATE_EPOCH") == null) {
+            return new Date().toString();
+        } else {
+            // Use the SOURCE_DATE_EPOCH timestamp and make the format locale/timezone insensitive
+            java.text.SimpleDateFormat fmt = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss z", java.util.Locale.ENGLISH);
+            fmt.setTimeZone(java.util.TimeZone.getTimeZone("UTC"));
+            Date date = new Date(1000 * Long.parseLong(System.getenv("SOURCE_DATE_EPOCH")));
+            return fmt.format(date);
+        }
+    }
 }
